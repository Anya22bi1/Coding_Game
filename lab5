import java.util.*;
import java.io.*;
import java.math.*;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
class Player {

    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        int surfaceN = in.nextInt(); // the number of points used to draw the surface of Mars.
        
        int begin = 0;
        int end = 0;
        int landingX = 0;
        int landingY = 0;
        int lastX = -1;
        int lastY = -1;


        for (int i = 0; i < surfaceN; i++) {
            int landX = in.nextInt(); // X coordinate of a surface point. (0 to 6999)
            int landY = in.nextInt(); // Y coordinate of a surface point. By linking all the points together in a sequential fashion, you form the surface of Mars.
            if (landY == lastY) {
                if (end == 0) {
                    begin = lastX;
                    landingY = lastY;
                    end = landX;
                } else end = landX;
            } else {
                lastY = landY;
                lastX = landX;
            }        
        }

        // game loop
        while (true) {
            int X = in.nextInt();
            int Y = in.nextInt();
            int hSpeed = in.nextInt(); // the horizontal speed (in m/s), can be negative.
            int vSpeed = in.nextInt(); // the vertical speed (in m/s), can be negative.
            int fuel = in.nextInt(); // the quantity of remaining fuel in liters.
            int rotate = in.nextInt(); // the rotation angle in degrees (-90 to 90).
            int power = in.nextInt(); // the thrust power (0 to 4).

            // Write an action using System.out.println()
            // To debug: System.err.println("Debug messages...");


            // rotate power. rotate is the desired rotation angle. power is the desired thrust power.
            System.err.println(begin);
            System.err.println(end);
            System.err.println(rotate);
            System.err.println(power);
            boolean position1 = false;
            boolean position2 = false;
            boolean position3 = false;
            if (X < begin) position1 = true;
            if (X > end) position3 = true;
            if (X < end && X > begin) position2 = true;


            if (position1) {
                if(hSpeed < 50) {
                    System.out.println("-40 4");
                }
                if (hSpeed >= 50) {
                    System.out.println("40 4");
                }
            }

            if (position3) {
                if (hSpeed > -50){
                    System.out.println("40 4");
                }
                if (hSpeed <= -50){
                    System.out.println("-40 4");
                }
            }

            if (position2) {
                if(hSpeed > 10) {
                    System.out.println("50 4");
                }
                if (hSpeed < -10) {
                    System.out.println("-50 4");
                }
                if (hSpeed > -10 && hSpeed <= 10){
                    if (vSpeed > -35){
                        System.out.println("0 2");
                    }
                    if (vSpeed <= -35){
                        System.out.println("0 4");
                    }
                }
            }
        }
    }
}
